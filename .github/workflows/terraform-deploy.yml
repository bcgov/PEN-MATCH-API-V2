name: Terraform Deploy

on:
  push:
    branches:
      - main   # or change to your branch

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    environment: dev
    env:
      # Azure credentials for Terraform provider
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_USE_OIDC: true

      # Terraform input variables
      TF_VAR_resource_group_name: ${{ secrets.RESOURCE_GROUP_NAME }}
      TF_VAR_vnet_name: ${{ secrets.VNET_NAME }}
      TF_VAR_vnet_resource_group_name: ${{ secrets.VNET_RESOURCE_GROUP_NAME }}
      TF_VAR_api_image: ${{ secrets.API_IMAGE }}
      TF_VAR_image_tag: ${{ secrets.IMAGE_TAG }}
      TF_VAR_azure_openai_endpoint: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
      TF_VAR_azure_openai_api_key: ${{ secrets.AZURE_OPENAI_API_KEY }}
      TF_VAR_azure_openai_deployment_name: ${{ secrets.AZURE_OPENAI_DEPLOYMENT_NAME }}
      TF_VAR_azure_openai_embedding_deployment: ${{ secrets.AZURE_OPENAI_EMBEDDING_DEPLOYMENT }}
      TF_VAR_azure_openai_embedding_endpoint: ${{ secrets.AZURE_OPENAI_EMBEDDING_ENDPOINT }}
      TF_VAR_azure_openai_llm_endpoint: ${{ secrets.AZURE_OPENAI_LLM_ENDPOINT }}




    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.12.2"   # use the version you need

      # 3️⃣ Terraform init
      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      # 4️⃣ Terraform plan
      - name: Terraform Plan
        working-directory: ./infra
        run: terraform plan -out=tfplan -var-file="main.tfvars.json"

      # 5️⃣ Terraform apply
      - name: Terraform Apply
        working-directory: ./infra
        run: terraform apply -auto-approve tfplan
