name: Test Cosmos DB Connection via App Service

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  test-cosmos-connection:
    name: Test Cosmos DB Connection
    runs-on: ubuntu-latest
    environment: dev
    timeout-minutes: 10
    
    env:
      AZURE_WEBAPP_NAME: 'pen-match-api-v2-app'
      RESOURCE_GROUP_NAME: ${{ secrets.RESOURCE_GROUP_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Configure App Service for Cosmos Test
        run: |
          echo "‚öôÔ∏è Setting Cosmos DB environment variables..."
          az webapp config appsettings set \
            --resource-group $RESOURCE_GROUP_NAME \
            --name $AZURE_WEBAPP_NAME \
            --settings \
              AZURE_COSMOSDB_ENDPOINT="${{ secrets.AZURE_COSMOSDB_ENDPOINT }}"

      - name: Trigger App Service Deployment
        run: |
          echo "üöÄ Triggering App Service deployment from GitHub..."
          az webapp deployment source sync \
            --resource-group $RESOURCE_GROUP_NAME \
            --name $AZURE_WEBAPP_NAME
          echo "‚úÖ Deployment triggered"

      - name: Wait for Deployment
        run: |
          echo "‚è≥ Waiting for deployment to complete..."
          sleep 90

      - name: Test Cosmos DB Connection via Logs
        run: |
          echo "üß™ Testing Cosmos DB connection via application logs..."
          
          # Restart app to trigger cosmos.py execution
          echo "üîÑ Restarting app to run cosmos test..."
          az webapp restart \
            --resource-group $RESOURCE_GROUP_NAME \
            --name $AZURE_WEBAPP_NAME
          
          # Wait for restart
          sleep 30
          
          # Check application logs for cosmos connection result (FIXED COMMAND)
          echo "üìã Checking application logs for test results..."
          LOGS=$(timeout 60s az webapp log tail \
            --resource-group $RESOURCE_GROUP_NAME \
            --name $AZURE_WEBAPP_NAME 2>&1 || echo "LOG_FAILED")
          
          echo "=== APPLICATION LOGS ==="
          echo "$LOGS"
          echo "========================"
          
          # Check if test passed
          if echo "$LOGS" | grep -q "‚úÖ Connected!"; then
            echo "‚úÖ COSMOS DB CONNECTION TEST PASSED"
            echo "App Service successfully connected to Cosmos DB via private endpoint!"
          elif echo "$LOGS" | grep -q "‚ùå Failed:"; then
            echo "‚ùå COSMOS DB CONNECTION TEST FAILED"
            echo "Error details in logs above"
            exit 1
          else
            echo "‚ö†Ô∏è Could not determine test result from logs"
            echo "The app may not have executed cosmos.py or logs are not available"
            
            # Try alternative log method
            echo "üîç Trying alternative log download method..."
            az webapp log download \
              --resource-group $RESOURCE_GROUP_NAME \
              --name $AZURE_WEBAPP_NAME \
              --log-file app-logs.zip || echo "Log download failed"
            
            if [ -f "app-logs.zip" ]; then
              unzip -q app-logs.zip
              echo "=== DOWNLOADED LOG CONTENTS ==="
              find . -name "*.log" -exec cat {} \; | tail -50
              echo "==============================="
            fi
            
            exit 1
          fi

      - name: Azure Logout
        run: az logout
        if: always()