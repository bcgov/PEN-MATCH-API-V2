name: Test Cosmos DB Connection via App Service

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  test-cosmos-connection:
    name: Test Cosmos DB Connection
    runs-on: ubuntu-latest
    environment: dev
    timeout-minutes: 10
    
    env:
      AZURE_WEBAPP_NAME: 'pen-match-api-v2-app'
      RESOURCE_GROUP_NAME: ${{ secrets.RESOURCE_GROUP_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Configure App Service for Cosmos Test
        run: |
          echo "‚öôÔ∏è Setting Cosmos DB environment variables..."
          az webapp config appsettings set \
            --resource-group $RESOURCE_GROUP_NAME \
            --name $AZURE_WEBAPP_NAME \
            --settings \
              AZURE_COSMOSDB_ENDPOINT="${{ secrets.AZURE_COSMOSDB_ENDPOINT }}"

      - name: Trigger App Service Deployment
        run: |
          echo "üöÄ Triggering App Service deployment from GitHub..."
          
          # Sync deployment (pulls latest from main branch)
          az webapp deployment source sync \
            --resource-group $RESOURCE_GROUP_NAME \
            --name $AZURE_WEBAPP_NAME
          
          echo "‚úÖ Deployment triggered"

      - name: Wait for Deployment to Complete
        run: |
          echo "‚è≥ Waiting for deployment to complete..."
          sleep 90
          
          # Check deployment status
          az webapp deployment list \
            --resource-group $RESOURCE_GROUP_NAME \
            --name $AZURE_WEBAPP_NAME \
            --query "[0].{status:status,author:author,message:message}" \
            --output table

      - name: Test Cosmos DB Connection
        run: |
          echo "üß™ Testing Cosmos DB connection via SSH..."
          
          # Try SSH first
          SSH_RESULT=$(az webapp ssh \
            --resource-group $RESOURCE_GROUP_NAME \
            --name $AZURE_WEBAPP_NAME \
            --command "cd /home/site/wwwroot && python app/cosmos.py" 2>&1 || echo "SSH_FAILED")
          
          echo "SSH Result: $SSH_RESULT"
          
          if [[ "$SSH_RESULT" == *"‚úÖ Connected!"* ]]; then
            echo "‚úÖ COSMOS DB CONNECTION TEST PASSED via SSH"
          elif [[ "$SSH_RESULT" == "SSH_FAILED" ]]; then
            echo "SSH not available, checking application logs..."
            
            # Fallback to logs
            echo "üìã Checking application logs..."
            LOGS=$(az webapp log tail \
              --resource-group $RESOURCE_GROUP_NAME \
              --name $AZURE_WEBAPP_NAME \
              --timeout 60 2>&1 || echo "LOG_FAILED")
            
            echo "=== APP LOGS ==="
            echo "$LOGS"
            echo "================"
            
            if echo "$LOGS" | grep -q "‚úÖ Connected!"; then
              echo "‚úÖ COSMOS DB CONNECTION TEST PASSED via logs"
            else
              echo "‚ùå COSMOS DB CONNECTION TEST FAILED"
              exit 1
            fi
          else
            echo "‚ùå COSMOS DB CONNECTION TEST FAILED"
            echo "SSH Error: $SSH_RESULT"
            exit 1
          fi

      - name: Azure Logout
        run: az logout
        if: always()